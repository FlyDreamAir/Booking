@inject IJSRuntime JSRuntime

<MudText Align="@Align"
         Color="@Color"
         Class="@Class"
         Style="@Style"
         Typo="@Typo">
    @_title
</MudText>

@code {
    private string _title = "Loading...";

    [Parameter]
    public Align Align { get; set; }

    [Parameter]
    public Color Color { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public string? Style { get; set; }

    [Parameter]
    public Typo Typo { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await using var document = await JSRuntime.InvokeAsync<IJSObjectReference>(
            "document.valueOf"
        );
        var currentTitle = await JSRuntime.InvokeAsync<string>("Reflect.get", document, "title");
        if (!string.IsNullOrEmpty(currentTitle) && _title != currentTitle)
        {
            _title = currentTitle;
            StateHasChanged();
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}
