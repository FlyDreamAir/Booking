@using Microsoft.AspNetCore.WebUtilities;
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

@{
    string isPersistent = "false";
    string returnUrl = ReturnUrl ?? NavigationManager.Uri;

    string GetExternalLoginUrl(string provider)
    {
        return QueryHelpers.AddQueryString("/api/Account/ExternalLogin",
            new Dictionary<string, string?>()
            {
                { nameof(provider), provider },
                { nameof(isPersistent), isPersistent },
                { nameof(returnUrl), returnUrl }
            });
    }

    string GetUrl(string destination)
    {
        return QueryHelpers.AddQueryString($"/Account/{destination}",
            new Dictionary<string, string?>()
            {
                { nameof(returnUrl), returnUrl }
            }
        );
    }
}

<AuthorizeView>
    <Authorized>
        <RedirectToUrl ReturnUrl="@ReturnUrl" />
    </Authorized>
    <NotAuthorized>
        <MudHtmlForm Action="/api/Account/Login"
                     Method="@HtmlFormMethod.Post"
                     ActionQueries="@(new(){ { "returnUrl", returnUrl } })"
                     Context="form">
            <MudStack Spacing="1">
                <MudTextField T="string"
                              Variant="@Variant.Outlined"
                              Label="Username"
                              Required="true"
                              RequiredError="Please enter your username."
                              UserAttributes="@(new(){ {"name", "userName"} })" />
                <MudTextField T="string"
                              Variant="@Variant.Outlined"
                              Label="Password"
                              InputType="@InputType.Password"
                              Required="true"
                              RequiredError="Please enter your password."
                              UserAttributes="@(new(){ {"name", "password"} })" />
                <MudLink Href="@GetUrl("ForgotPassword")">
                    Forgot your password?
                </MudLink>
                <MudLink Href="@GetUrl("ResendEmailConfirmation")">
                    Resend email confirmation
                </MudLink>
                @if (!string.IsNullOrEmpty(Error))
                {
                    <MudText Color="@Color.Error">@Error</MudText>
                }
                <MudStack Row="true" Justify="@Justify.Center" Class="m-3">
                    <MudButton Variant="@Variant.Filled"
                               Color="@Color.Primary"
                               Size="@Size.Large"
                               Style="border-radius: 100px;"
                               OnClick="form.Submit">
                        Login
                    </MudButton>
                </MudStack>
                <MudStack Row="true" Spacing="1" AlignItems="@AlignItems.Center">
                    <MudDivider Style="width: auto;" />
                    <MudText>or</MudText>
                    <MudDivider Style="width: auto;" />
                </MudStack>
                <MudStack Spacing="2" Class="m-3">
                    <MudButton Variant="@Variant.Filled"
                               Color="@Color.Transparent"
                               Size="@Size.Large"
                               StartIcon="@Icons.Custom.Brands.Google"
                               Style="background-color: white;"
                               Href="@(GetExternalLoginUrl("Google"))">
                        Sign In with Google
                    </MudButton>
                    <MudButton Variant="@Variant.Filled"
                               Color="@Color.Transparent"
                               Size="@Size.Large"
                               StartIcon="@Icons.Custom.Brands.Microsoft"
                               Style="background-color: white;"
                               Href="@(GetExternalLoginUrl("Microsoft"))">
                        Sign In with Microsoft
                    </MudButton>
                </MudStack>
            </MudStack>
        </MudHtmlForm>
    </NotAuthorized>
</AuthorizeView>

@code {
    [SupplyParameterFromQuery]
    public string? ReturnUrl { get; set; }

    [SupplyParameterFromQuery]
    public string? Error { get; set; }
}
