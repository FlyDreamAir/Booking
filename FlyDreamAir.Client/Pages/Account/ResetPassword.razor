@page "/Account/ResetPassword"
@using System.ComponentModel.DataAnnotations

<PageTitle>Reset password</PageTitle>

<BackgroundFiller />

<MudText Typo="@Typo.h4"
         Align="@Align.Center"
         Color="@Color.Primary"
         Class="m-3"
         Style="user-select: none;">
    Reset password
</MudText>

<MudStack Class="w-100 p-4" AlignItems="@AlignItems.Center">
    <MudText>
        Reset your password
    </MudText>

    @{
        RenderFragment<bool> form = (isMobile) =>
            @<MudHtmlForm Action="/api/Account/ResetPassword"
                          Method="@HtmlFormMethod.Post"
                          ActionQueries="@(new(){ { "returnUrl", ReturnUrl } })"
                          Context="form"
                          Class="@(isMobile ? "w-100" : "w-50")">
                <MudStack Spacing="1">
                    <MudTextField T="string"
                                  Value="@UserName"
                                  ReadOnly="true"
                                  Variant="@Variant.Outlined"
                                  Label="Username"
                                  Required="true"
                                  RequiredError="Please enter your username."
                                  UserAttributes="@(new(){ {"name", "userName"} })" />
                    <MudTextField @bind-Value="@_password"
                                  Variant="@Variant.Outlined"
                                  Label="New Password"
                                  InputType="@InputType.Password"
                                  Required="true"
                                  RequiredError="Please enter your new password."
                                  Validation="@(new MinLengthAttribute(8)
                                  {
                                      ErrorMessage =
                                          "The password must be at least {1} characters long."
                                  })"
                                  UserAttributes="@(new(){ {"name", "password"} })" />
                    <MudTextField T="string"
                                  Variant="@Variant.Outlined"
                                  Label="Confirm New Password"
                                  InputType="@InputType.Password"
                                  Required="true"
                                  RequiredError="Please confirm your new password."
                                  Validation="@((Func<string, string?>)((value) =>
                                      (value == _password)
                                          ? null : "The passwords do not match."))" />
                    @if (!string.IsNullOrEmpty(Error))
                    {
                        <MudText Color="@Color.Error">@Error</MudText>
                    }
                    <MudStack Row="true" Justify="@Justify.Center" Class="m-3">
                        <MudButton Variant="@Variant.Filled"
                                   Color="@Color.Primary"
                                   Size="@Size.Large"
                                   Style="border-radius: 100px;"
                                   OnClick="form.Submit">
                            Reset
                        </MudButton>
                    </MudStack>
                </MudStack>

                <input name="code" value="@Code" required hidden />
            </MudHtmlForm>;
    }

    <DeviceView Prerender="false">
        <Unknown>
            <MudStack AlignItems="@AlignItems.Center">
                <MudProgressCircular Indeterminate="true" Class="m-5" />
            </MudStack>
        </Unknown>
        <Desktop>
            @form(false)
        </Desktop>
        <Mobile>
            @form(true)
        </Mobile>
    </DeviceView>
</MudStack>

@code {
    private string? _password;

    [SupplyParameterFromQuery]
    public string? ReturnUrl { get; init; }

    [SupplyParameterFromQuery]
    public string? Error { get; init; }

    [SupplyParameterFromQuery]
    public required string Code { get; init; }

    [SupplyParameterFromQuery]
    public required string UserName { get; init; }
}
